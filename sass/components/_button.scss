.btn {
  &, // this meas the simple button (no pseudo-classes)
  &:link,
  &:visited {
    /* link is a special state of a selector when it is an anchor element */
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* research what inline-block does. It is creating some padding on the top and it has its own space */
    border-radius: 10rem; /* set a very high number to get kind of a ellipse shape */

    /* Animate the shadow of the button */
    transition: all 0.2s; /* the transition property has to be inside the initial state*/

    /* set a relative position as reference to the after .btn */
    position: relative;
    font-size: $default-font-size;

    // change for the <button> element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-3px); /* in relation to the link state */
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    outline: none;
    transform: translateY(-1px); /* in relation to the link state*/
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;

    &::after {
      background-color: $color-primary;
    }
  }

  /* The "after" pseudo-element adds like a virtual element right after the element that we are selecting */
  /* after is basically treated as a child of .btn */
  &::after {
    content: ''; /* content and display are always required when after is used*/
    display: inline-block; /* use inline-block because .btn is also inline-block*/
    height: 100%;
    width: 100%;
    border-radius: 10rem;

    /* set the after .btn behind the actual button with: */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    /* the transition always goes in the initial state */
    transition: all 0.4s;
  }

  &--animated {
    animation: moveInBottom 0.5s ease-out 0.75s; /* this animation is for the main button. .75s is a delay for the animation */
    animation-fill-mode: backwards; /* automatically apply styles of the 0% (in moveInBottom animation) before the animation starts */
  }
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all 0.2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
    transform: translateY(-2px);
  }

  &:active {
    box-shadow: 0 0.5rem 1rem rgba($color-black, 0.15);
    transform: translateY(0);
  }
}
